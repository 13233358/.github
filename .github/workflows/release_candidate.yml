name: Release

on:
  workflow_call:
    inputs:
      install:
        type: string
        required: false
        default: npm ci
      tag:
        type: string
        required: false
        default: next
    secrets:
      gh_token: 
        required: true
      npm_token:
        required: true

jobs:
  release-candidate:
    name: Candidate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: ${{ inputs.install }}

      - name: Build
        run: npm run build --if-present

      - name: Create .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.npm_token }}

      - name: Publish release candidate
        run: |
          version=$(jq -r .version package.json)
          echo "$( jq ".version = \"$(echo $version)-rc.$(git rev-parse --short HEAD)\"" package.json )" > package.json
          yarn changeset publish --tag ${{ inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.gh_token }}

      - name: Output candidate version
        id: candidate-version
        uses: actions/github-script@v6
        with:
          script: |
            const package = require(`${process.env.GITHUB_WORKSPACE}/package.json`)
            github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              context: `Published ${package.name}`,
              description: package.version,
              target_url: `https://unpkg.com/${package.name}@${package.version}/`
            })

  rc-at-dotcom:
      name: Run primer integration workflow at dotcom
      needs: release-candidate
      # Using the branch name for ref as the PR is still not merged - TODO: Remove this once we confirm that the workflow is running as expected
      uses: github/github/.github/workflows/primer-react-nightly.yml@primer-react-nightly
      # TODO: FInd out how to get the PR number for the release and the sha that is merged into main and trigger the workflow with those inputs 
      with:
        merged-pr: 'TODO: Get the SHA that is merged into main and triggers the workflow'
        release-pr: 'TODO: Get the PR number for the release'
