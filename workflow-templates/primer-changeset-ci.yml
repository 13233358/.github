name: CI

on: [push]

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
        with:
          # This makes Actions fetch all Git history so that Changesets
          # can generate changelogs with the correct commits.
          fetch-depth: 0

      # If you use a version of Node other than 12, change it here.
      - name: Setup Node.js 12.x
        uses: actions/setup-node@master
        with:
          node-version: 12.x

      # If you use npm instead of yarn, change this to `npm install`.
      - name: Install dependencies
        run: yarn

      # Change this to customize your test command.
      - name: Test
        run: yarn test

      - name: Create .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN_SHARED }}

      # Change `package_name` below to the package name you used for changesets
      - name: Release snapshot
        run: |
          echo "$( jq '.version = "0.0.0"' package.json )" > package.json
          echo -e "---\n'package_name': patch\n---\n\nFake entry to force publishing" > .changeset/force-snapshot-release.md
          ./node_modules/.bin/changeset version --snapshot
          ./node_modules/.bin/changeset publish --tag canary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post published version to GitHub checks
        run: |
          name=$(jq -r .name package.json)
          version=$(jq -r .version package.json)
          npx action-status --context="$name" --state=success --description=$version --url "https://unpkg.com/$name@$version/"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
